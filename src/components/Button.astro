---
interface Props {
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  [x: string]: any;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = '',
  ...rest
} = Astro.props;

const variants = {
  primary:
    'bg-gradient-to-r from-primary to-secondary text-white hover:opacity-90',
  secondary: 'bg-dark text-white hover:bg-opacity-90',
  outline:
    'bg-transparent border border-dark text-dark hover:bg-dark hover:text-white',
};

const sizes = {
  sm: 'text-sm px-4 py-2',
  md: 'px-6 py-3',
  lg: 'text-lg px-8 py-4',
};
---

{
  href ? (
    <a
      href={href}
      class:list={[
        'inline-block font-medium rounded-lg transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]',
        variants[variant],
        sizes[size],
        className,
      ]}
      {...rest}
    >
      <slot />
    </a>
  ) : (
    <button
      class:list={[
        'inline-block font-medium rounded-lg transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98]',
        variants[variant],
        sizes[size],
        className,
      ]}
      {...rest}
    >
      <slot />
    </button>
  )
}
